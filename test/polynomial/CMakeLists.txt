add_executable(test_polynomial_quadrangle quadrangle.cpp)
target_include_directories(test_polynomial_quadrangle PRIVATE ${EIGEN_INC})
set_target_properties(test_polynomial_quadrangle PROPERTIES OUTPUT_NAME quadrangle)
add_test(NAME test_polynomial_quadrangle COMMAND quadrangle)

add_executable(test_polynomial_hexa hexa.cpp)
target_include_directories(test_polynomial_hexa PRIVATE ${EIGEN_INC})
set_target_properties(test_polynomial_hexa PROPERTIES OUTPUT_NAME hexa)
add_test(NAME test_polynomial_hexa COMMAND hexa)

add_executable(test_polynomial_basis basis.cpp)
target_include_directories(test_polynomial_basis PRIVATE ${EIGEN_INC})
set_target_properties(test_polynomial_basis PROPERTIES OUTPUT_NAME basis)
add_test(NAME test_polynomial_basis COMMAND basis)

add_executable(test_polynomial_projection projection.cpp)
target_include_directories(test_polynomial_projection PRIVATE ${EIGEN_INC} ${CGNS_INC} ${METIS_INC} ${MPI_CXX_HEADER_DIR})
target_link_libraries(test_polynomial_projection ${CGNS_LIB} metis)
set_target_properties(test_polynomial_projection PROPERTIES OUTPUT_NAME projection)
add_test(NAME test_polynomial_projection COMMAND projection)

add_executable(test_polynomial_limiter limiter.cpp)
target_include_directories(test_polynomial_limiter PRIVATE ${EIGEN_INC} ${CGNS_INC} ${METIS_INC} ${MPI_CXX_HEADER_DIR})
target_link_libraries(test_polynomial_limiter ${CGNS_LIB} ${MPI_mpi_LIBRARY} metis)
set_target_properties(test_polynomial_limiter PROPERTIES OUTPUT_NAME limiter)
add_test(NAME test_polynomial_limiter COMMAND limiter)
