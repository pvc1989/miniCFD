// Copyright 2022 PEI Weicheng
#ifndef MINI_AIRCRAFT_AIRFOIL_HPP_
#define MINI_AIRCRAFT_AIRFOIL_HPP_

#include <array>
#include <cmath>

namespace mini {
namespace aircraft {
namespace airfoil {

// TODO(PVC): Interpolate by (AoA, Mach) in a C81 table.
template <typename Scalar>
class Abstract {
 public:
  virtual Scalar Lift(Scalar deg) const = 0;
  virtual Scalar Drag(Scalar deg) const = 0;
};

template <typename Scalar>
class Linear : public Abstract<Scalar> {
  Scalar c_lift_, c_drag_;

 public:
  Linear(Scalar c_lift/* deg^{-1} */, Scalar c_drag/* deg^{-1} */)
      : c_lift_(c_lift), c_drag_(c_drag) {
  }
  Scalar Lift(Scalar deg) const override {
    return c_lift_ * deg;
  }
  Scalar Drag(Scalar deg) const override {
    return c_drag_ * std::abs(deg);
  }
};

template <typename Scalar>
class SC1095 : public Abstract<Scalar> {
  static constexpr std::array<Scalar, 181> lift_{
      0.0, 0.25667, 0.5133, 0.77, 0.755,
      0.74, 0.725, 0.710, 0.695, 0.68,
      0.665, 0.65, 0.725, 0.8, 0.875,
      0.95, 0.9175, 0.886, 0.8525, 0.82,
      0.7875, 0.755, 0.7225, 0.69, 0.6575,
      0.625, 0.5925, 0.56, 0.5275, 0.495,
      0.4625, 0.43, 0.3975, 0.365, 0.3325,
      0.3, 0.2675, 0.235, 0.2025, 0.17,
      0.1375, 0.105, 0.0725, 0.04, 0.0075,
      -0.025, -0.0575, -0.09, -0.1225, -0.155,
      -0.1875, -0.22, -0.2525, -0.285, -0.3175,
      -0.35, -0.3825, -0.415, -0.4475, -0.48,
      -0.5125, -0.545, -0.5775, -0.61, -0.6425,
      -0.675, -0.7075, -0.74, -0.7725, -0.805,
      -0.8357, -0.87, -0.9025, -0.935, -0.9675,
      -1.0, -0.996, -0.992, -0.988, -0.984,
      -0.98, -0.976, -0.972, -1.07, -0.724,
      -0.37, -0.19, -0.39, -0.46, -0.19,
      0.03, 0.243, 0.46, 0.67, 0.89,
      1.1, 1.25, 1.1, 0.98, 0.9828,
      0.9856, 0.9884, 0.9912, 0.994, 0.997,
      1.0, 0.9675, 0.935, 0.9025, 0.87,
      0.8375, 0.805, 0.7725, 0.74, 0.7075,
      0.675, 0.6425, 0.61, 0.5775, 0.548,
      0.5125, 0.48, 0.4475, 0.415, 0.3825,
      0.35, 0.3175, 0.285, 0.2525, 0.22,
      0.1875, 0.155, 0.1225, 0.09, 0.0575,
      0.025, -0.0075, -0.04, -0.0725, -0.105,
      -0.1375, -0.17, -0.2025, -0.236, -0.2675,
      -0.3, -0.3325, -0.365, -0.3975, -0.43,
      -0.4625, -0.495, -0.5275, -0.56, -0.5925,
      -0.625, -0.6575, -0.69, -0.7225, -0.755,
      -0.7875, -0.82, -0.8525, -0.885, -0.9175,
      -0.95, -0.875, -0.8, -0.725, -0.65,
      -0.665, -0.68, -0.695, -0.71, -0.725,
      -0.74, -0.755, -0.77, -0.5133, -0.25667,
      0.0
  };
  static constexpr std::array<Scalar, 181> drag_{
      0.0, 0.367, 0.733, 1.1, 1.065,
      1.03, 0.995, 0.96, 0.92, 0.88,
      0.84, 0.8, 0.76, 0.72, 0.68,
      0.64, 0.6875, 0.735, 0.7825, 0.83,
      0.87875, 0.9275, 0.97625, 1.025, 1.07375,
      1.1225, 1.17125, 1.22, 1.26875, 1.3175,
      1.36625, 1.415, 1.46375, 1.5125, 1.56125,
      1.61, 1.66, 1.71, 1.76, 1.81,
      1.8575, 1.905, 1.9525, 2.0, 2.02625,
      2.0525, 2.07875, 2.105, 2.09875, 2.0925,
      2.08625, 2.08, 2.055, 2.03, 2.005,
      1.98, 1.92875, 1.8775, 1.82625, 1.775,
      1.70125, 1.6275, 1.55375, 1.48, 1.4075,
      1.335, 1.2625, 1.19, 1.1175, 1.045,
      0.9725, 0.9, 0.8325, 0.765, 0.6975,
      0.63, 0.562, 0.488, 0.417, 0.34,
      0.267, 0.195, 0.12, 0.045, 0.018,
      0.012, 0.008, 0.00775, 0.0075, 0.0075,
      0.0075, 0.008, 0.0085, 0.009, 0.011,
      0.017, 0.026, 0.145, 0.23, 0.293,
      0.345, 0.4, 0.455, 0.507, 0.56,
      0.63, 0.6975, 0.765, 0.8325, 0.9,
      0.9725, 1.045, 1.1175, 1.19, 1.2625,
      1.335, 1.4075, 1.48, 1.55375, 1.6275,
      1.70125, 1.775, 1.82625, 1.8775, 1.92875,
      1.98, 2.005, 2.03, 2.055, 2.08,
      2.08625, 2.0925, 2.09875, 2.105, 2.07875,
      2.0525, 2.02625, 2.0, 1.9525, 1.905,
      1.8575, 1.81, 1.76, 1.71, 1.66,
      1.61, 1.56125, 1.5125, 1.46375, 1.415,
      1.36625, 1.3175, 1.26875, 1.22, 1.17125,
      1.1225, 1.07375, 1.025, 0.97625, 0.9275,
      0.87875, 0.83, 0.7825, 0.735, 0.6875,
      0.64, 0.68, 0.72, 0.76, 0.8,
      0.84, 0.88, 0.92, 0.96, 0.996,
      1.03, 1.065, 1.1, 0.733, 0.367,
      0.0
  };

 public:
  Scalar Lift(Scalar deg) const override {
    return lift_[(deg + 180) / 2];
  }
  Scalar Drag(Scalar deg) const override {
    return drag_[(deg + 180) / 2];
  }
};

}  // namespace airfoil
}  // namespace aircraft
}  // namespace mini

#endif  // MINI_AIRCRAFT_AIRFOIL_HPP_
